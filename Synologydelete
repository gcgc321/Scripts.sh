#!/bin/bash

# Define an array of directory paths
DIRECTORIES=(
    "/path/to/first/directory"
    "/path/to/second/directory"
    # Add more directories as needed
)

# Define the file extensions to consider
FILE_EXTENSIONS=("log" "gho")

# Iterate through each directory
for DIRECTORY in "${DIRECTORIES[@]}"; do
    # Change to the specified directory
    cd "$DIRECTORY" || continue

    # List all files in the directory (excluding directories)
    files=()
    while IFS= read -r -d '' file; do
        files+=("$file")
    done < <(find . -maxdepth 1 -type f -print0)

    # Filter files by extension
    filtered_files=()
    for file in "${files[@]}"; do
        for ext in "${FILE_EXTENSIONS[@]}"; do
            if [[ "$file" == *".$ext" ]]; then
                filtered_files+=("$file")
                break
            fi
        done
    done

    # Sort filtered files by modification time (oldest to newest)
    IFS=$'\n' sorted_files=($(sort -z -r -t $'\0' -k 2 <<<"${filtered_files[*]}"))

    # Keep the oldest and newest files
    oldest_file="${sorted_files[-1]}"
    newest_file="${sorted_files[0]}"

    # Delete all other files
    for file in "${sorted_files[@]}"; do
        if [[ "$file" != "$oldest_file" && "$file" != "$newest_file" ]]; then
            rm "$file"
            echo "Deleted $file"
        fi
    done

    echo "Kept $oldest_file (oldest) and $newest_file (newest) in $DIRECTORY"
done
